Commit changes Git (bash):
    git add .
    git commit -m "message about the changes"
    git push

Branches Git (bash):
    git checkout -b <descriptive name of branch> (Makes new branch)
    (once new branch works)
    git add .
    git commit -m "message about the changes"
    git push -u origin <descriptive name of branch>

Merge branch (bash):
    (once new branch works)
    git checkout main
    git pull origin main
    git merge <descriptive name of branch>
    git commit -m "Merge <descriptive name of branch> into main"
    git push origin main
    git branch -d <descriptive name of branch> (local)
    git push origin --delete <descriptive name of branch> (Github)

Using virtual environment (bash):
    source venv/Scripts/activate
    deactivate

Steps to replace dataset:
Update code files for new csv file:
    app.py 
    manga_routes.py
    manga.py
    load_dataset.py
    import_csv_to_db.py
then enter these cmds (bash):
    cd scripts
    python load_dataset.py
    cd ..
    python create_db.py
    python scripts/import_csv_to_db.py
    flask run


project file structure:
manga_tracker/
│
├── app.py                   # Main Flask app
├── data/        
|   └── mangaMAL.db            
|   └── mangaMAL.csv         # Kaggle dataset
├── frontend/
|   └── .next/
|   └── node_modules/
|   └── public/
|   └── src/
|       └── app/
|           └── manga/
|               └── page.tsx
|           └── page.tsx
|           └── layout.tsx
|           └── globals.css
├── models/                  # Database models
│   └── manga.py             # Manga database model
├── routes/                  # Blueprint routes
│   └── manga_routes.py      # Manga-related routes
├── static/                  # Static assets (CSS, JS)
│   ├── style.css            # Custom styles
│   └── app.js               # Custom JavaScript
├── templates/               # HTML templates
│   ├── index.html           # Homepage
│   ├── search.html          # Search results page
│   └── layout.html          # Base template
├── scripts/                 # Scripts and utilities
│   └── load_dataset.py      # Dataset processing script
|    └── import_csv_to_db.py   
├── migrations/              # Database migrations (optional, for Flask-Migrate)
├── requirements.txt         # Dependencies
└── venv/                    # Virtual environment
└── create_db.py      


# Columns used in mangaMAL.csv
# manga_id,title,type,score,status,volumes,chapters,favorites,
# sfw,genres,themes,demographics,synopsis,main_picture,url